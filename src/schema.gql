# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductBrand {
  id: Float!
  name: String!
  path: String!
}

type ProductCategory {
  id: Float!
  name: String!
  description: String!
  path: String!
  slug: String!
  parent: ProductCategory
  children: [ProductCategory!]
  updatedAt: DateTime!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductReview {
  id: Float!
  title: String!
  content: String!
  wouldRecommend: Boolean!
  rating: Float!
  submittedByAlias: String!
  email: String!
  isPublished: Boolean!
  productId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductColor {
  id: Float!
  value: String!
}

type ProductSize {
  id: Float!
  value: String!
}

type ProductAttribute {
  sku: String!
  quantity: Float!
  size: ProductSize!
  color: ProductColor!
}

type ProductImage {
  id: Float!
  imageUrl: String!
}

type Product {
  id: Float!
  name: String!
  description: String!
  unitPrice: Float!
  isDiscontinued: Boolean!
  brandId: Float!
  brand: ProductBrand!
  images: [ProductImage!]!
  reviews: [ProductReview!]!
  attributes: [ProductAttribute!]!
  categoryId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  priceLabel: String!
}

type CustomerOrder {
  id: Float!
  orderNumber: String!
  deliveryAddress: String!
  city: String!
  postalCode: String!
  totalAmount: Float!
  shippingCost: Float!
  grandTotal: Float!
  purchaseCurrency: String!
  paymentType: String!
  userId: String!
  orderStatusId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserAddress {
  id: Float!
  city: String!
  street: String!
  postalCode: String!
}

type User {
  id: String!
  firstName: String!
  lastName: String!
  mobilePhoneNumber: String
  email: String!
  isEmailConfirmed: Boolean!
  isRegisteredWithGoogle: Boolean!
  permissions: [Permission!]!
  address: UserAddress
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""The permissions of the user"""
enum Permission {
  CREATE_PRODUCT
  UPDATE_PRODUCT
  DELETE_PRODUCT
  PUBLISH_REVIEW
}

type UserWithTokensDto {
  user: User!
  accessToken: String!
  refreshToken: String!
}

type QueryProductsOutput {
  items: [Product!]!
  totalCount: Float!
  hasMore: Boolean!
}

type AssetUrl {
  descriptive: String!
  standard: String!
}

type PaymentMethodCategory {
  identifier: String!
  name: String!
  asset_urls: AssetUrl!
}

type KlarnaSessionResponse {
  session_id: String!
  client_token: String!
  payment_method_categories: [PaymentMethodCategory!]!
}

type Query {
  me: User!
  categories: [ProductCategory!]!
  getOneCategory(path: String!): ProductCategory!
  products(input: FindProductsInput!): QueryProductsOutput!
  product(id: Float!): Product!
  customerOrders: [CustomerOrder!]!
  productBrands(input: GetProductBrandsInput!): [ProductBrand!]!
}

input FindProductsInput {
  offset: Float!
  limit: Float!
  categoryPath: String!
  sortBy: PRODUCT_SORT_BY
  sortDirection: SORT_DIRECTION
}

enum PRODUCT_SORT_BY {
  ID
  NAME
  UNIT_PRICE
}

enum SORT_DIRECTION {
  DESC
  ASC
}

input GetProductBrandsInput {
  sortBy: BRAND_SORT_BY
  sortDirection: SORT_DIRECTION
}

enum BRAND_SORT_BY {
  ID
  NAME
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
  createProductReview(input: CreateProductReviewInput!): ProductReview!
  publishReview(id: Float!): ProductReview!
  initializeKlarnaSession(input: InitKlarnaSessionInput!): KlarnaSessionResponse!
  createOrderWithKlarna(authorizationToken: String!, input: InitKlarnaSessionInput!): CustomerOrder!
  registerUser(input: RegisterUserDto!): UserWithTokensDto!
  login(input: LoginUserDto!): UserWithTokensDto!
  logout: Boolean!
  authenticateWithGoogle(googleAuthToken: String!): UserWithTokensDto!
}

input CreateProductInput {
  name: String!
  description: String!
  unitPrice: Float!
  imageUrls: [String!]!
  categoryId: Float!
  brandId: Float!
  attributes: [CreateProductAttributeInput!]!
}

input CreateProductAttributeInput {
  size: AttributeValueType!
  color: AttributeValueType!
  quantity: Float!
}

input AttributeValueType {
  value: String!
}

input CreateProductReviewInput {
  title: String!
  content: String!
  wouldRecommend: Boolean!
  rating: Float!
  submittedByAlias: String!
  email: String!
  productId: Float!
}

input InitKlarnaSessionInput {
  purchase_country: String!
  purchase_currency: String!
  locale: String!
  order_amount: Float!
  order_tax_amount: Float!
  order_lines: [OrderLineInput!]!
  billing_address: BillingAddressInput!
}

input OrderLineInput {
  name: String!
  quantity: Float!
  unit_price: Float!
  tax_rate: Float!
  total_amount: Float!
  total_discount_amount: Float!
  total_tax_amount: Float!
  product_url: String!
  productId: Float!
  image_url: String!
}

input BillingAddressInput {
  given_name: String!
  family_name: String!
  email: String!
  title: String
  street_address: String!
  postal_code: String!
  city: String!
  region: String
  phone: String!
  country: String
}

input RegisterUserDto {
  email: String!
  firstName: String!
  lastName: String!
  mobilePhoneNumber: String!
  password: String!
  city: String!
  street: String!
  postalCode: String!
}

input LoginUserDto {
  email: String!
  password: String!
}
